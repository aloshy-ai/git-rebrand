name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTC_WRAPPER: ""

jobs:
  test:
    name: Codecov Test Report
    runs-on: ubuntu-latest
    container:
      image: rust:latest
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v3
      
      - name: Install LLVM tools
        run: |
          apt-get update
          apt-get install -y llvm
      
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  macos-test:
    name: macOS Test Suite
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenSSL
        run: |
          brew install openssl@3 pkg-config
          # Set environment variables for both native and cross-compilation
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
          echo "OPENSSL_LIB_DIR=$(brew --prefix openssl@3)/lib" >> $GITHUB_ENV
          echo "OPENSSL_INCLUDE_DIR=$(brew --prefix openssl@3)/include" >> $GITHUB_ENV
          # Add pkg-config paths
          echo "PKG_CONFIG_PATH=$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          # Force static linking
          echo "OPENSSL_STATIC=1" >> $GITHUB_ENV
          # Add linker and compiler flags
          echo "LDFLAGS=-L$(brew --prefix openssl@3)/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I$(brew --prefix openssl@3)/include" >> $GITHUB_ENV
          echo "LIBRARY_PATH=$(brew --prefix openssl@3)/lib" >> $GITHUB_ENV
          # For cross compilation
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALL_STATIC=1" >> $GITHUB_ENV

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          # Ensure pkg-config can find OpenSSL
          export PKG_CONFIG_PATH="$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH"
          # Force static linking
          export OPENSSL_STATIC=1
          export OPENSSL_LIB_DIR=$(brew --prefix openssl@3)/lib
          export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl@3)/include
          
          cargo build --verbose --target ${{ matrix.target }}

      - name: Run tests
        run: |
          export PKG_CONFIG_PATH="$(brew --prefix openssl@3)/lib/pkgconfig:$PKG_CONFIG_PATH"
          export OPENSSL_STATIC=1
          export OPENSSL_LIB_DIR=$(brew --prefix openssl@3)/lib
          export OPENSSL_INCLUDE_DIR=$(brew --prefix openssl@3)/include
          
          cargo test --verbose --target ${{ matrix.target }}
