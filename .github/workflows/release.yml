name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Extracts the tag name (e.g., v1.0.0)
          release_name: Release ${{ github.ref_name }} # Uses the extracted tag name for the release
          draft: false
          prerelease: false
  
  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: git-rebrand
            asset_name: git-rebrand-linux-amd64
          - os: macos-latest
            artifact_name: git-rebrand
            asset_name: git-rebrand-darwin-amd64
          - os: windows-latest
            artifact_name: git-rebrand.exe
            asset_name: git-rebrand-windows-amd64.exe
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build release binary
        run: cargo build --release
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
